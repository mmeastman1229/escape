{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ha",
				"hazard_x"
			],
			[
				"haz",
				"hazard_map"
			],
			[
				"room",
				"room_height"
			],
			[
				"hazzar",
				"hazzard_y"
			],
			[
				"ro",
				"room_width"
			],
			[
				"player",
				"player_frame"
			],
			[
				"h",
				"hazard_x"
			],
			[
				"haz_",
				"hazard_map"
			],
			[
				"o",
				"old_player_y"
			],
			[
				"haza",
				"hazard_x"
			],
			[
				"schedule_",
				"schedule_interval"
			],
			[
				"curr",
				"current_room_hazards_list"
			],
			[
				"gam",
				"game_over"
			],
			[
				"sch",
				"schedule_unique"
			],
			[
				"say_mis",
				"say_mission_fail"
			],
			[
				"say_doo",
				"say_doors_closed"
			],
			[
				"door",
				"door_frame_number"
			],
			[
				"door_",
				"door_frame_number"
			],
			[
				"door_sh",
				"door_shadow_frames"
			],
			[
				"door_fr",
				"door_frame_number"
			],
			[
				"door_fra",
				"door_frame_number"
			],
			[
				"it",
				"item_carrying"
			],
			[
				"item_P",
				"item_player_is_on"
			],
			[
				"com",
				"completion"
			],
			[
				"re",
				"rescue_ship_shadow"
			],
			[
				"in",
				"ingredient2"
			],
			[
				"ing",
				"ingredient1"
			],
			[
				"item",
				"item_carrying"
			],
			[
				"p",
				"player_y"
			],
			[
				"che",
				"check_counter"
			],
			[
				"i",
				"item_player_is_on"
			],
			[
				"PLA",
				"PLAYER_NAME"
			],
			[
				"play",
				"player_x"
			],
			[
				"air",
				"air_countdown"
			]
		]
	},
	"buffers":
	[
		{
			"file": "escape_testing.py",
			"redo_stack":
			[
				[
					851,
					1,
					"unindent",
					null,
					"CgAAADefAAAAAAAAO58AAAAAAAAAAAAABp8AAAAAAAAKnwAAAAAAAAAAAADUngAAAAAAANieAAAAAAAAAAAAAJyeAAAAAAAAoJ4AAAAAAAAAAAAAXJ4AAAAAAABgngAAAAAAAAAAAABGngAAAAAAAEqeAAAAAAAAAAAAADCeAAAAAAAANJ4AAAAAAAAAAAAADp4AAAAAAAASngAAAAAAAAAAAADznQAAAAAAAPedAAAAAAAAAAAAAMCdAAAAAAAAxJ0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHnQAAAAAAAEufAAAAAAAAAAAAAAAA8L8"
				]
			],
			"settings":
			{
				"buffer_size": 60051,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					80,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzaQAAAAAAADNpAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"left_delete",
					null,
					"AQAAAO95AAAAAAAA73kAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzeQAAAAAAAPN5AAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"right_delete",
					null,
					"AQAAABV6AAAAAAAAFXoAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVegAAAAAAABV6AAAAAAAAAAAAAAAAVUA"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO95AAAAAAAA8HkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADveQAAAAAAAO95AAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AwAAABV6AAAAAAAAFnoAAAAAAAAAAAAAFnoAAAAAAAAWegAAAAAAAAEAAAAgFnoAAAAAAAAXegAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVegAAAAAAABZ6AAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAIt6AAAAAAAAjHoAAAAAAAAAAAAAjHoAAAAAAACQegAAAAAAAAAAAACMegAAAAAAAIx6AAAAAAAABAAAACAgICCMegAAAAAAAJR6AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLegAAAAAAAIt6AAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJt6AAAAAAAAnHoAAAAAAAAAAAAAnHoAAAAAAACkegAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbegAAAAAAAJt6AAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAALB6AAAAAAAAsXoAAAAAAAAAAAAAsXoAAAAAAAC5egAAAAAAAAAAAACxegAAAAAAALF6AAAAAAAACAAAACAgICAgICAgsXoAAAAAAAC9egAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwegAAAAAAALB6AAAAAAAAAAAAAAAA8L8"
				],
				[
					114,
					1,
					"left_delete",
					null,
					"AQAAALl6AAAAAAAAuXoAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9egAAAAAAAL16AAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAKV6AAAAAAAApnoAAAAAAAAAAAAApnoAAAAAAACuegAAAAAAAAAAAACmegAAAAAAAKZ6AAAAAAAACAAAACAgICAgICAgpnoAAAAAAACyegAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClegAAAAAAAKV6AAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAMZ6AAAAAAAAynoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGegAAAAAAAMZ6AAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAN16AAAAAAAA3noAAAAAAAAAAAAA3noAAAAAAADqegAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdegAAAAAAAN16AAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					10,
					"right_delete",
					null,
					"CgAAAL16AAAAAAAAvXoAAAAAAAABAAAACr16AAAAAAAAvXoAAAAAAAABAAAAIL16AAAAAAAAvXoAAAAAAAABAAAAIL16AAAAAAAAvXoAAAAAAAABAAAAIL16AAAAAAAAvXoAAAAAAAABAAAAIL16AAAAAAAAvXoAAAAAAAABAAAAIL16AAAAAAAAvXoAAAAAAAABAAAAIL16AAAAAAAAvXoAAAAAAAABAAAAIL16AAAAAAAAvXoAAAAAAAABAAAAIL16AAAAAAAAvXoAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9egAAAAAAAL16AAAAAAAAAAAAAAAA8L8"
				],
				[
					131,
					3,
					"right_delete",
					null,
					"AwAAAL16AAAAAAAAvXoAAAAAAAABAAAAIL16AAAAAAAAvXoAAAAAAAABAAAAIL16AAAAAAAAvXoAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9egAAAAAAAL16AAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPl6AAAAAAAA+noAAAAAAAAAAAAA+noAAAAAAAAGewAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5egAAAAAAAPl6AAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"left_delete",
					null,
					"AQAAAAJ7AAAAAAAAAnsAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGewAAAAAAAAZ7AAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAN7AAAAAAAABHsAAAAAAAAAAAAABHsAAAAAAAAMewAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADewAAAAAAAAN7AAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"left_delete",
					null,
					"AQAAAAh7AAAAAAAACHsAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMewAAAAAAAAx7AAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"trim_trailing_white_space",
					null,
					"AgAAAM96AAAAAAAAz3oAAAAAAAABAAAAIJp6AAAAAAAAmnoAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIewAAAAAAAAh7AAAAAAAAAAAAAAAA8L8"
				],
				[
					145,
					1,
					"left_delete",
					null,
					"AQAAAK16AAAAAAAArXoAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxegAAAAAAALF6AAAAAAAAAAAAAAAA8L8"
				],
				[
					147,
					1,
					"right_delete",
					null,
					"AQAAANN6AAAAAAAA03oAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTegAAAAAAANN6AAAAAAAAAAAAAAAAVUA"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANN6AAAAAAAA1HoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTegAAAAAAANN6AAAAAAAAAAAAAAAA8L8"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK16AAAAAAAArnoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtegAAAAAAAK16AAAAAAAAAAAAAAAA8L8"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAGJ7AAAAAAAAY3sAAAAAAAAAAAAAY3sAAAAAAABnewAAAAAAAAAAAABjewAAAAAAAGN7AAAAAAAABAAAACAgICBjewAAAAAAAGt7AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiewAAAAAAAGJ7AAAAAAAAAAAAAAAA8L8"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIJ7AAAAAAAAg3sAAAAAAAAAAAAAg3sAAAAAAACLewAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCewAAAAAAAIJ7AAAAAAAAAAAAAAAA8L8"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKd7AAAAAAAAqHsAAAAAAAAAAAAAqHsAAAAAAACwewAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnewAAAAAAAKd7AAAAAAAAAAAAAAAA8L8"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMF7AAAAAAAAwnsAAAAAAAAAAAAAwnsAAAAAAADKewAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBewAAAAAAAMF7AAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"left_delete",
					null,
					"AQAAAMZ7AAAAAAAAxnsAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKewAAAAAAAMp7AAAAAAAAAAAAAAAA8L8"
				],
				[
					169,
					1,
					"trim_trailing_white_space",
					null,
					"AgAAAKZ7AAAAAAAApnsAAAAAAAABAAAAIIF7AAAAAAAAgXsAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGewAAAAAAAMZ7AAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHl7AAAAAAAAensAAAAAAAAAAAAAensAAAAAAACCewAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5ewAAAAAAAHl7AAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKZ7AAAAAAAAp3sAAAAAAAAAAAAAp3sAAAAAAACvewAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmewAAAAAAAKZ7AAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					8,
					"right_delete",
					null,
					"CAAAAIp7AAAAAAAAinsAAAAAAAABAAAACop7AAAAAAAAinsAAAAAAAABAAAAIIp7AAAAAAAAinsAAAAAAAABAAAAIIp7AAAAAAAAinsAAAAAAAABAAAAIIp7AAAAAAAAinsAAAAAAAABAAAAIIp7AAAAAAAAinsAAAAAAAABAAAAIIp7AAAAAAAAinsAAAAAAAABAAAAIIp7AAAAAAAAinsAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKewAAAAAAAIp7AAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"right_delete",
					null,
					"AQAAAIp7AAAAAAAAinsAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKewAAAAAAAIp7AAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIp7AAAAAAAAi3sAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKewAAAAAAAIp7AAAAAAAAAAAAAAAA8L8"
				],
				[
					190,
					9,
					"right_delete",
					null,
					"CQAAAK97AAAAAAAAr3sAAAAAAAABAAAACq97AAAAAAAAr3sAAAAAAAABAAAAIK97AAAAAAAAr3sAAAAAAAABAAAAIK97AAAAAAAAr3sAAAAAAAABAAAAIK97AAAAAAAAr3sAAAAAAAABAAAAIK97AAAAAAAAr3sAAAAAAAABAAAAIK97AAAAAAAAr3sAAAAAAAABAAAAIK97AAAAAAAAr3sAAAAAAAABAAAAIK97AAAAAAAAr3sAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvewAAAAAAAK97AAAAAAAAAAAAAAAA8L8"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK97AAAAAAAAsHsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvewAAAAAAAK97AAAAAAAAAAAAAAAA8L8"
				],
				[
					194,
					1,
					"trim_trailing_white_space",
					null,
					"AgAAAJ17AAAAAAAAnXsAAAAAAAABAAAAIHh7AAAAAAAAeHsAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeewAAAAAAAJ57AAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAFp8AAAAAAAAW3wAAAAAAAAAAAAAW3wAAAAAAABjfAAAAAAAAAAAAAA+fAAAAAAAAD98AAAAAAAAAAAAAD98AAAAAAAAR3wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAAA+fAAAAAAAAD58AAAAAAAAAAAAAAAA8L9afAAAAAAAAFp8AAAAAAAAAAAAAAAA8L8"
				],
				[
					205,
					1,
					"trim_trailing_white_space",
					null,
					"AgAAAGJ8AAAAAAAAYnwAAAAAAAABAAAAID18AAAAAAAAPXwAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPfAAAAAAAAA98AAAAAAAAAAAAAAAA8L8"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAAPN8AAAAAAAA93wAAAAAAAAAAAAA93wAAAAAAAD7fAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzfAAAAAAAAPN8AAAAAAAAAAAAAAAA8L8"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAAA19AAAAAAAAEX0AAAAAAAAAAAAAEX0AAAAAAAAVfQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANfQAAAAAAAA19AAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					1,
					"left_delete",
					null,
					"AQAAAPd8AAAAAAAA93wAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7fAAAAAAAAPt8AAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "   "
					},
					"AwAAAPd8AAAAAAAA+HwAAAAAAAAAAAAA+HwAAAAAAAD5fAAAAAAAAAAAAAD5fAAAAAAAAPp8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3fAAAAAAAAPd8AAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					1,
					"left_delete",
					null,
					"AQAAABB9AAAAAAAAEH0AAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUfQAAAAAAABR9AAAAAAAAAAAAAAAA8L8"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "   "
					},
					"AwAAABB9AAAAAAAAEX0AAAAAAAAAAAAAEX0AAAAAAAASfQAAAAAAAAAAAAASfQAAAAAAABN9AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQfQAAAAAAABB9AAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					2,
					"left_delete",
					null,
					"AgAAAPJ8AAAAAAAA8nwAAAAAAAAIAAAAICAgICAgICDvfAAAAAAAAO98AAAAAAAAAwAAACAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6fAAAAAAAAPJ8AAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAO98AAAAAAAA83wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvfAAAAAAAAO98AAAAAAAAAAAAAAAA8L8"
				],
				[
					241,
					2,
					"left_delete",
					null,
					"AgAAAAl9AAAAAAAACX0AAAAAAAADAAAAICAgBX0AAAAAAAAFfQAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMfQAAAAAAAAx9AAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "explorer_rooms.py",
			"settings":
			{
				"buffer_size": 740,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\nWIDTH = 800\nHEIGHT = 800\n\nPLAYER_NAME = \"Matt\"  # change this to your name!\nFRIEND1_NAME = \"Luke\"  # change this to a friend's name!\nFRIEND2_NAME = \"Noah\"  # change this to another friend's name!\ncurrent_room = 31  # start room = 31\n\n\n# dictionaries\nACCESS_DICTIONARY = {}\n\n# error checking\nchecksum = 0\n\n\ncurrent_room = 31\nenergy = 100\nair = 100\nair_fixed = False\n",
			"file": "variables.py",
			"file_size": 192,
			"file_write_time": 133104918027004939,
			"redo_stack":
			[
				[
					16,
					1,
					"revert_hunk",
					null,
					"AQAAABsAAAAAAAAA6wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbAAAAAAAAABsAAAAAAAAAAAAAAAAA8L8"
				]
			],
			"settings":
			{
				"buffer_size": 366,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAASAAAAIyBnYW1lIHdpbmRvdyBzaXpl",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAABsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAdAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbAAAAAAAAABsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"paste_and_indent",
					null,
					"AQAAABsAAAAAAAAA6QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbAAAAAAAAABsAAAAAAAAAAAAAAAAAAAA"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"trim",
				"Trim Trailing White Space"
			],
			[
				"pac re",
				"Package Control: Remove Package"
			],
			[
				"auto",
				"AutoDocstring: Current"
			],
			[
				"pac ",
				"Package Control: Install Package"
			],
			[
				"tabnin",
				"⌬ tabnine: Open Configuration"
			],
			[
				"pac in",
				"Package Control: Install Package"
			],
			[
				"pack in",
				"Package Control: Install Package"
			],
			[
				"rea",
				"ReadmePlease"
			],
			[
				"fil",
				"FileDiffs: Menu"
			],
			[
				"f",
				"FileDiffs: Menu"
			],
			[
				"tr",
				"Trim Trailing White Space"
			],
			[
				"fi",
				"FileDiffs: Menu"
			],
			[
				"ter",
				"Terminus: Close All"
			],
			[
				"K",
				"Preferences: Key Bindings"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"pref set",
				"Preferences: Settings"
			],
			[
				"ui",
				"UI: Customize Theme"
			],
			[
				"new file",
				"File: New File Relative to Current View"
			],
			[
				"file",
				"FileDiffs: Menu"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"filedi",
				"FileDiffs: Menu"
			],
			[
				"setti",
				"Preferences: Settings"
			],
			[
				"settin",
				"Preferences: Settings"
			],
			[
				"ky",
				"Preferences: Key Bindings"
			],
			[
				"tri",
				"Trim Trailing White Space"
			],
			[
				"fildi",
				"FileDiffs: Menu"
			],
			[
				"t",
				"Trim Trailing White Space"
			],
			[
				"trime",
				"Trim Trailing White Space"
			],
			[
				"fidi",
				"FileDiffs: Menu"
			],
			[
				"pref se",
				"Preferences: Settings"
			],
			[
				"pro s",
				"Project: Save As"
			],
			[
				"proj",
				"Project: Add Folder"
			],
			[
				"ins",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/matth/OneDrive/Projects/Escape"
	],
	"file_history":
	[
		"/C/Users/matth/OneDrive/Projects/Escape/listings/listing12-14.py",
		"/C/Users/matth/OneDrive/Projects/Escape/escape_testing.py",
		"/C/Users/matth/OneDrive/Projects/Escape/listing12-14.py",
		"/C/Users/matth/OneDrive/Projects/Escape/escape.py",
		"/C/Users/matth/OneDrive/Projects/Escape/__init__.py",
		"/C/Users/matth/OneDrive/Projects/Escape/listings/listing12-10.py",
		"/C/Users/matth/OneDrive/Projects/Escape/listings/listing12-7.py",
		"/C/Users/matth/OneDrive/Projects/Escape/listing12-6.py",
		"/C/Users/matth/OneDrive/Projects/Escape/listing12-7.py",
		"/C/Users/matth/OneDrive/Projects/Escape/listing12-8.py",
		"/C/Users/matth/OneDrive/Projects/Escape/listing12-9.py",
		"/C/Users/matth/OneDrive/Projects/Escape/listing12-5.py",
		"/C/Users/matth/some_folder",
		"/C/Users/matth/OneDrive/Projects/No-Starch-Books/Suggested-Reading-Order.txt",
		"/C/Users/matth/OneDrive/Projects/Basic-Python-for-Data-Management/about.txt",
		"/C/Users/matth/OneDrive/Projects/Docs/Solarized-Setup.txt",
		"/C/Users/matth/OneDrive/Projects/Docs/package-directory-list.txt",
		"/C/Users/matth/OneDrive/Projects/Docs/config-highlight.def",
		"/C/Users/matth/OneDrive/Projects/pbb/files/Working Files - README.txt",
		"/C/Users/matth/OneDrive/Projects/Python-Pro/RockPaperScissors.py",
		"/C/Users/matth/OneDrive/Projects/Sublime-Settings-Saved/Solarized-Setup.txt",
		"/C/Users/matth/OneDrive/Projects/Sublime-Settings-Saved/Sublime Notes",
		"/C/Users/matth/OneDrive/Projects/Escape/listing12-2.py",
		"/C/Users/matth/OneDrive/Projects/Escape/listings/listing11-7.py",
		"/C/Users/matth/OneDrive/Projects/Escape/listing11-6.py",
		"/C/Users/matth/OneDrive/Projects/Escape/listing11-7.py",
		"/C/Users/matth/OneDrive/Projects/Escape/listing11-5.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listings/listing11-3.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listing11-3.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listings/listing11-2.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listings/listing11-1.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listings/listing10-7.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listings/listing10-6.py",
		"/C/Users/matth/OneDrive/Documents/Saved-Settings/idle-configuration.txt",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listing10-2.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listing10-6.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listing4-2.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listing3-3.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listing5-6.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listing10-5.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/test.sql",
		"/C/Users/matth/OneDrive/Projects/Escape/listing11-3.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listing10-6_.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listings/listing10-5.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listings/listing8-1.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listings/listing10-4.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listings/listing10-3.py",
		"/C/Users/matth/OneDrive/Projects/Escape_v2/listings/listing10-2.py"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 128.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			" (0, ",
			"(0, 45),",
			")\n",
			"adjust_wall_transparency",
			"##\n",
			"adjust_wall_transparency",
			",\n",
			"if pl",
			"hazzard",
			"# clock.unschedule(hazard_move)",
			"#clock.unschedule(hazard_move)",
			"# clock.unschedule(hazard_move)",
			"#clock.unschedule(hazard_move)",
			"Rect(",
			"air",
			"in_my_pock",
			"in_my_pockets"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"hazard",
			"clock.unschedule(hazard_move)"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "escape_testing.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 60051,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								31446,
								31446
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "python"
							},
							"color_helper.refresh": true,
							"color_helper.scan":
							{
								"allow_scanning": false,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".py",
								"current_syntax": "Python/Python",
								"enabled": true,
								"last_updated": 1668496119.05,
								"scanning": "-comment"
							},
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 34365.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "explorer_rooms.py",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 740,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "python"
							},
							"color_helper.scan":
							{
								"allow_scanning": false,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".py",
								"current_syntax": "Python/Python",
								"enabled": true,
								"last_updated": 1668496119.05,
								"scanning": "-comment"
							},
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 2,
					"file": "variables.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 366,
						"regions":
						{
						},
						"selection":
						[
							[
								366,
								366
							]
						],
						"settings":
						{
							"color_helper.refresh": true,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 48.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 408.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Escape.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"var",
				"variables.py"
			],
			[
				"12-4",
				"listing12-14_test.py"
			],
			[
				"12-14",
				"listings\\listing12-14.py"
			],
			[
				"12-10",
				"listings\\listing12-10.py"
			],
			[
				"12-7",
				"listings\\listing12-7.py"
			],
			[
				"12-2",
				"listing12-2.py"
			],
			[
				"11-7",
				"listings\\listing11-7.py"
			],
			[
				"11-6",
				"listings\\listing11-6.py"
			],
			[
				"11-5",
				"listing11-5.py"
			],
			[
				"11-3",
				"listings\\listing11-3.py"
			],
			[
				"11-2",
				"listings\\listing11-2.py"
			],
			[
				"11-1",
				"listings\\listing11-1.py"
			],
			[
				"10-7",
				"listings\\listing10-7.py"
			],
			[
				"10-6",
				"listings\\listing10-6.py"
			],
			[
				"10-5",
				"listings\\listing10-5.py"
			],
			[
				"10-4",
				"listings\\listing10-4.py"
			],
			[
				"10-3",
				"listings\\listing10-3.py"
			],
			[
				"10-2",
				"listings\\listing10-2.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\matth\\OneDrive\\Projects\\Sublime-Text-Project-Files\\escape-game.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 327.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"add"
			]
		],
		"width": 578.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 439.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
